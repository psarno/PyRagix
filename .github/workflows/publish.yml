name: Publish to PyPI

on:
  push:
    tags:
      - 'v*' # Only runs on tags like v0.1.1
  workflow_dispatch: # Enables manual runs
    inputs:
      tag: # Input to specify the tag (e.g., v0.1.0)
        description: 'Tag or version to publish (e.g., v0.1.0)'
        required: true
        type: string

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag || github.ref }} # Use input tag for manual runs, fallback to event ref
          persist-credentials: false # Security: don't persist creds
          submodules: true # Initialize submodules to fix cleanup foreach
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install pypa/build
        run: >-
          python3 -m pip install build --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-testpypi:
    name: >-
      Publish Python 🐍 distribution 📦 to TestPyPI
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/pyragix

    permissions:
      id-token: write # For OIDC/trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution 📦 to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: ${{ !contains(github.event.inputs.tag || github.ref, '-test') }}
    needs: [build, publish-to-testpypi] # Wait for test success
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pyragix

    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
